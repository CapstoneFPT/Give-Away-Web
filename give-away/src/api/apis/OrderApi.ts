/* tslint:disable */
/* eslint-disable */
/**
 * Give Away API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  OrderResponsePaginationResponseResult,
  OrderStatus,
} from '../models/index';
import {
    OrderResponsePaginationResponseResultFromJSON,
    OrderResponsePaginationResponseResultToJSON,
    OrderStatusFromJSON,
    OrderStatusToJSON,
} from '../models/index';

export interface ApiOrdersAccountsAccountIdGetRequest {
    accountId: string;
    pageNumber?: number;
    pageSize?: number;
    status?: OrderStatus;
}

/**
 * 
 */
export class OrderApi extends runtime.BaseAPI {

    /**
     */
    async apiOrdersAccountsAccountIdGetRaw(requestParameters: ApiOrdersAccountsAccountIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrderResponsePaginationResponseResult>> {
        if (requestParameters['accountId'] == null) {
            throw new runtime.RequiredError(
                'accountId',
                'Required parameter "accountId" was null or undefined when calling apiOrdersAccountsAccountIdGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['pageNumber'] != null) {
            queryParameters['PageNumber'] = requestParameters['pageNumber'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['PageSize'] = requestParameters['pageSize'];
        }

        if (requestParameters['status'] != null) {
            queryParameters['Status'] = requestParameters['status'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/orders/accounts/{accountId}`.replace(`{${"accountId"}}`, encodeURIComponent(String(requestParameters['accountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OrderResponsePaginationResponseResultFromJSON(jsonValue));
    }

    /**
     */
    async apiOrdersAccountsAccountIdGet(requestParameters: ApiOrdersAccountsAccountIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrderResponsePaginationResponseResult> {
        const response = await this.apiOrdersAccountsAccountIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
