/* tslint:disable */
/* eslint-disable */
/**
 * Give Away API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  FashionItemDetailRequest,
  FashionItemDetailResponseResult,
} from '../models/index';
import {
    FashionItemDetailRequestFromJSON,
    FashionItemDetailRequestToJSON,
    FashionItemDetailResponseResultFromJSON,
    FashionItemDetailResponseResultToJSON,
} from '../models/index';

export interface ApiShopsShopIdFashionitemsItemIdPutRequest {
    itemId: string;
    shopId: string;
    fashionItemDetailRequest?: FashionItemDetailRequest;
}

export interface ApiShopsShopIdFashionitemsPostRequest {
    shopId: string;
    fashionItemDetailRequest?: FashionItemDetailRequest;
}

/**
 * 
 */
export class ShopApi extends runtime.BaseAPI {

    /**
     */
    async apiShopsShopIdFashionitemsItemIdPutRaw(requestParameters: ApiShopsShopIdFashionitemsItemIdPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FashionItemDetailResponseResult>> {
        if (requestParameters['itemId'] == null) {
            throw new runtime.RequiredError(
                'itemId',
                'Required parameter "itemId" was null or undefined when calling apiShopsShopIdFashionitemsItemIdPut().'
            );
        }

        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling apiShopsShopIdFashionitemsItemIdPut().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/shops/{shopId}/fashionitems/{itemId}`.replace(`{${"itemId"}}`, encodeURIComponent(String(requestParameters['itemId']))).replace(`{${"shopId"}}`, encodeURIComponent(String(requestParameters['shopId']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: FashionItemDetailRequestToJSON(requestParameters['fashionItemDetailRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FashionItemDetailResponseResultFromJSON(jsonValue));
    }

    /**
     */
    async apiShopsShopIdFashionitemsItemIdPut(requestParameters: ApiShopsShopIdFashionitemsItemIdPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FashionItemDetailResponseResult> {
        const response = await this.apiShopsShopIdFashionitemsItemIdPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiShopsShopIdFashionitemsPostRaw(requestParameters: ApiShopsShopIdFashionitemsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FashionItemDetailResponseResult>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling apiShopsShopIdFashionitemsPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/shops/{shopId}/fashionitems`.replace(`{${"shopId"}}`, encodeURIComponent(String(requestParameters['shopId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: FashionItemDetailRequestToJSON(requestParameters['fashionItemDetailRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FashionItemDetailResponseResultFromJSON(jsonValue));
    }

    /**
     */
    async apiShopsShopIdFashionitemsPost(requestParameters: ApiShopsShopIdFashionitemsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FashionItemDetailResponseResult> {
        const response = await this.apiShopsShopIdFashionitemsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
