/* tslint:disable */
/* eslint-disable */
/**
 * Give Away API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrderDetail } from './OrderDetail';
import {
    OrderDetailFromJSON,
    OrderDetailFromJSONTyped,
    OrderDetailToJSON,
} from './OrderDetail';
import type { RefundStatus } from './RefundStatus';
import {
    RefundStatusFromJSON,
    RefundStatusFromJSONTyped,
    RefundStatusToJSON,
} from './RefundStatus';
import type { Transaction } from './Transaction';
import {
    TransactionFromJSON,
    TransactionFromJSONTyped,
    TransactionToJSON,
} from './Transaction';
import type { Image } from './Image';
import {
    ImageFromJSON,
    ImageFromJSONTyped,
    ImageToJSON,
} from './Image';

/**
 * 
 * @export
 * @interface Refund
 */
export interface Refund {
    /**
     * 
     * @type {string}
     * @memberof Refund
     */
    refundId?: string;
    /**
     * 
     * @type {string}
     * @memberof Refund
     */
    description?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Refund
     */
    refundPercentage?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Refund
     */
    responseFromShop?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Refund
     */
    createdDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof Refund
     */
    orderDetailId?: string;
    /**
     * 
     * @type {OrderDetail}
     * @memberof Refund
     */
    orderDetail?: OrderDetail;
    /**
     * 
     * @type {RefundStatus}
     * @memberof Refund
     */
    refundStatus?: RefundStatus;
    /**
     * 
     * @type {Transaction}
     * @memberof Refund
     */
    transaction?: Transaction;
    /**
     * 
     * @type {Array<Image>}
     * @memberof Refund
     */
    images?: Array<Image> | null;
}

/**
 * Check if a given object implements the Refund interface.
 */
export function instanceOfRefund(value: object): value is Refund {
    return true;
}

export function RefundFromJSON(json: any): Refund {
    return RefundFromJSONTyped(json, false);
}

export function RefundFromJSONTyped(json: any, ignoreDiscriminator: boolean): Refund {
    if (json == null) {
        return json;
    }
    return {
        
        'refundId': json['refundId'] == null ? undefined : json['refundId'],
        'description': json['description'] == null ? undefined : json['description'],
        'refundPercentage': json['refundPercentage'] == null ? undefined : json['refundPercentage'],
        'responseFromShop': json['responseFromShop'] == null ? undefined : json['responseFromShop'],
        'createdDate': json['createdDate'] == null ? undefined : (new Date(json['createdDate'])),
        'orderDetailId': json['orderDetailId'] == null ? undefined : json['orderDetailId'],
        'orderDetail': json['orderDetail'] == null ? undefined : OrderDetailFromJSON(json['orderDetail']),
        'refundStatus': json['refundStatus'] == null ? undefined : RefundStatusFromJSON(json['refundStatus']),
        'transaction': json['transaction'] == null ? undefined : TransactionFromJSON(json['transaction']),
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(ImageFromJSON)),
    };
}

export function RefundToJSON(value?: Refund | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'refundId': value['refundId'],
        'description': value['description'],
        'refundPercentage': value['refundPercentage'],
        'responseFromShop': value['responseFromShop'],
        'createdDate': value['createdDate'] == null ? undefined : ((value['createdDate']).toISOString()),
        'orderDetailId': value['orderDetailId'],
        'orderDetail': OrderDetailToJSON(value['orderDetail']),
        'refundStatus': RefundStatusToJSON(value['refundStatus']),
        'transaction': TransactionToJSON(value['transaction']),
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(ImageToJSON)),
    };
}

