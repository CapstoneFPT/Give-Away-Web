/* tslint:disable */
/* eslint-disable */
/**
 * Give Away API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrderDetailsResponse } from './OrderDetailsResponse';
import {
    OrderDetailsResponseFromJSON,
    OrderDetailsResponseFromJSONTyped,
    OrderDetailsResponseToJSON,
} from './OrderDetailsResponse';
import type { RefundStatus } from './RefundStatus';
import {
    RefundStatusFromJSON,
    RefundStatusFromJSONTyped,
    RefundStatusToJSON,
} from './RefundStatus';

/**
 * 
 * @export
 * @interface RefundResponse
 */
export interface RefundResponse {
    /**
     * 
     * @type {string}
     * @memberof RefundResponse
     */
    refundId?: string;
    /**
     * 
     * @type {string}
     * @memberof RefundResponse
     */
    description?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof RefundResponse
     */
    createdDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof RefundResponse
     */
    orderDetailId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof RefundResponse
     */
    images?: Array<string> | null;
    /**
     * 
     * @type {RefundStatus}
     * @memberof RefundResponse
     */
    refundStatus?: RefundStatus;
    /**
     * 
     * @type {OrderDetailsResponse}
     * @memberof RefundResponse
     */
    orderDetailsResponse?: OrderDetailsResponse;
}

/**
 * Check if a given object implements the RefundResponse interface.
 */
export function instanceOfRefundResponse(value: object): value is RefundResponse {
    return true;
}

export function RefundResponseFromJSON(json: any): RefundResponse {
    return RefundResponseFromJSONTyped(json, false);
}

export function RefundResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefundResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'refundId': json['refundId'] == null ? undefined : json['refundId'],
        'description': json['description'] == null ? undefined : json['description'],
        'createdDate': json['createdDate'] == null ? undefined : (new Date(json['createdDate'])),
        'orderDetailId': json['orderDetailId'] == null ? undefined : json['orderDetailId'],
        'images': json['images'] == null ? undefined : json['images'],
        'refundStatus': json['refundStatus'] == null ? undefined : RefundStatusFromJSON(json['refundStatus']),
        'orderDetailsResponse': json['orderDetailsResponse'] == null ? undefined : OrderDetailsResponseFromJSON(json['orderDetailsResponse']),
    };
}

export function RefundResponseToJSON(value?: RefundResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'refundId': value['refundId'],
        'description': value['description'],
        'createdDate': value['createdDate'] == null ? undefined : ((value['createdDate']).toISOString()),
        'orderDetailId': value['orderDetailId'],
        'images': value['images'],
        'refundStatus': RefundStatusToJSON(value['refundStatus']),
        'orderDetailsResponse': OrderDetailsResponseToJSON(value['orderDetailsResponse']),
    };
}

