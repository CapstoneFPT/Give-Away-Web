/* tslint:disable */
/* eslint-disable */
/**
 * Give Away API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Order } from './Order';
import {
    OrderFromJSON,
    OrderFromJSONTyped,
    OrderToJSON,
} from './Order';
import type { TransactionType } from './TransactionType';
import {
    TransactionTypeFromJSON,
    TransactionTypeFromJSONTyped,
    TransactionTypeToJSON,
} from './TransactionType';
import type { Refund } from './Refund';
import {
    RefundFromJSON,
    RefundFromJSONTyped,
    RefundToJSON,
} from './Refund';
import type { Withdraw } from './Withdraw';
import {
    WithdrawFromJSON,
    WithdrawFromJSONTyped,
    WithdrawToJSON,
} from './Withdraw';
import type { AuctionDeposit } from './AuctionDeposit';
import {
    AuctionDepositFromJSON,
    AuctionDepositFromJSONTyped,
    AuctionDepositToJSON,
} from './AuctionDeposit';
import type { Member } from './Member';
import {
    MemberFromJSON,
    MemberFromJSONTyped,
    MemberToJSON,
} from './Member';
import type { ConsignSale } from './ConsignSale';
import {
    ConsignSaleFromJSON,
    ConsignSaleFromJSONTyped,
    ConsignSaleToJSON,
} from './ConsignSale';

/**
 * 
 * @export
 * @interface Transaction
 */
export interface Transaction {
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    transactionId?: string;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    amount?: number;
    /**
     * 
     * @type {Date}
     * @memberof Transaction
     */
    createdDate?: Date;
    /**
     * 
     * @type {TransactionType}
     * @memberof Transaction
     */
    type?: TransactionType;
    /**
     * 
     * @type {Order}
     * @memberof Transaction
     */
    order?: Order;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    orderId?: string | null;
    /**
     * 
     * @type {Refund}
     * @memberof Transaction
     */
    refund?: Refund;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    refundId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    consignSaleId?: string | null;
    /**
     * 
     * @type {ConsignSale}
     * @memberof Transaction
     */
    consignSale?: ConsignSale;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    withdrawId?: string | null;
    /**
     * 
     * @type {Withdraw}
     * @memberof Transaction
     */
    withdraw?: Withdraw;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    memberId?: string | null;
    /**
     * 
     * @type {Member}
     * @memberof Transaction
     */
    member?: Member;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    vnPayTransactionNumber?: string | null;
    /**
     * 
     * @type {AuctionDeposit}
     * @memberof Transaction
     */
    auctionDeposit?: AuctionDeposit;
}

/**
 * Check if a given object implements the Transaction interface.
 */
export function instanceOfTransaction(value: object): value is Transaction {
    return true;
}

export function TransactionFromJSON(json: any): Transaction {
    return TransactionFromJSONTyped(json, false);
}

export function TransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transaction {
    if (json == null) {
        return json;
    }
    return {
        
        'transactionId': json['transactionId'] == null ? undefined : json['transactionId'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'createdDate': json['createdDate'] == null ? undefined : (new Date(json['createdDate'])),
        'type': json['type'] == null ? undefined : TransactionTypeFromJSON(json['type']),
        'order': json['order'] == null ? undefined : OrderFromJSON(json['order']),
        'orderId': json['orderId'] == null ? undefined : json['orderId'],
        'refund': json['refund'] == null ? undefined : RefundFromJSON(json['refund']),
        'refundId': json['refundId'] == null ? undefined : json['refundId'],
        'consignSaleId': json['consignSaleId'] == null ? undefined : json['consignSaleId'],
        'consignSale': json['consignSale'] == null ? undefined : ConsignSaleFromJSON(json['consignSale']),
        'withdrawId': json['withdrawId'] == null ? undefined : json['withdrawId'],
        'withdraw': json['withdraw'] == null ? undefined : WithdrawFromJSON(json['withdraw']),
        'memberId': json['memberId'] == null ? undefined : json['memberId'],
        'member': json['member'] == null ? undefined : MemberFromJSON(json['member']),
        'vnPayTransactionNumber': json['vnPayTransactionNumber'] == null ? undefined : json['vnPayTransactionNumber'],
        'auctionDeposit': json['auctionDeposit'] == null ? undefined : AuctionDepositFromJSON(json['auctionDeposit']),
    };
}

export function TransactionToJSON(value?: Transaction | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'transactionId': value['transactionId'],
        'amount': value['amount'],
        'createdDate': value['createdDate'] == null ? undefined : ((value['createdDate']).toISOString()),
        'type': TransactionTypeToJSON(value['type']),
        'order': OrderToJSON(value['order']),
        'orderId': value['orderId'],
        'refund': RefundToJSON(value['refund']),
        'refundId': value['refundId'],
        'consignSaleId': value['consignSaleId'],
        'consignSale': ConsignSaleToJSON(value['consignSale']),
        'withdrawId': value['withdrawId'],
        'withdraw': WithdrawToJSON(value['withdraw']),
        'memberId': value['memberId'],
        'member': MemberToJSON(value['member']),
        'vnPayTransactionNumber': value['vnPayTransactionNumber'],
        'auctionDeposit': AuctionDepositToJSON(value['auctionDeposit']),
    };
}

