/* tslint:disable */
/* eslint-disable */
/**
 * Give Away API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransactionType } from './TransactionType';
import {
    TransactionTypeFromJSON,
    TransactionTypeFromJSONTyped,
    TransactionTypeToJSON,
} from './TransactionType';

/**
 * 
 * @export
 * @interface GetTransactionsResponse
 */
export interface GetTransactionsResponse {
    /**
     * 
     * @type {string}
     * @memberof GetTransactionsResponse
     */
    transactionId?: string;
    /**
     * 
     * @type {number}
     * @memberof GetTransactionsResponse
     */
    amount?: number;
    /**
     * 
     * @type {Date}
     * @memberof GetTransactionsResponse
     */
    createdDate?: Date;
    /**
     * 
     * @type {TransactionType}
     * @memberof GetTransactionsResponse
     */
    type?: TransactionType;
    /**
     * 
     * @type {string}
     * @memberof GetTransactionsResponse
     */
    memberId?: string | null;
}

/**
 * Check if a given object implements the GetTransactionsResponse interface.
 */
export function instanceOfGetTransactionsResponse(value: object): value is GetTransactionsResponse {
    return true;
}

export function GetTransactionsResponseFromJSON(json: any): GetTransactionsResponse {
    return GetTransactionsResponseFromJSONTyped(json, false);
}

export function GetTransactionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetTransactionsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'transactionId': json['transactionId'] == null ? undefined : json['transactionId'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'createdDate': json['createdDate'] == null ? undefined : (new Date(json['createdDate'])),
        'type': json['type'] == null ? undefined : TransactionTypeFromJSON(json['type']),
        'memberId': json['memberId'] == null ? undefined : json['memberId'],
    };
}

export function GetTransactionsResponseToJSON(value?: GetTransactionsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'transactionId': value['transactionId'],
        'amount': value['amount'],
        'createdDate': value['createdDate'] == null ? undefined : ((value['createdDate']).toISOString()),
        'type': TransactionTypeToJSON(value['type']),
        'memberId': value['memberId'],
    };
}

