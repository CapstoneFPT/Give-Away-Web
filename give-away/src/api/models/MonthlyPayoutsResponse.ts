/* tslint:disable */
/* eslint-disable */
/**
 * Give Away API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MonthPayout } from './MonthPayout';
import {
    MonthPayoutFromJSON,
    MonthPayoutFromJSONTyped,
    MonthPayoutToJSON,
} from './MonthPayout';

/**
 * 
 * @export
 * @interface MonthlyPayoutsResponse
 */
export interface MonthlyPayoutsResponse {
    /**
     * 
     * @type {number}
     * @memberof MonthlyPayoutsResponse
     */
    year?: number;
    /**
     * 
     * @type {Array<MonthPayout>}
     * @memberof MonthlyPayoutsResponse
     */
    monthlyPayouts?: Array<MonthPayout> | null;
}

/**
 * Check if a given object implements the MonthlyPayoutsResponse interface.
 */
export function instanceOfMonthlyPayoutsResponse(value: object): value is MonthlyPayoutsResponse {
    return true;
}

export function MonthlyPayoutsResponseFromJSON(json: any): MonthlyPayoutsResponse {
    return MonthlyPayoutsResponseFromJSONTyped(json, false);
}

export function MonthlyPayoutsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MonthlyPayoutsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'year': json['year'] == null ? undefined : json['year'],
        'monthlyPayouts': json['monthlyPayouts'] == null ? undefined : ((json['monthlyPayouts'] as Array<any>).map(MonthPayoutFromJSON)),
    };
}

export function MonthlyPayoutsResponseToJSON(value?: MonthlyPayoutsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'year': value['year'],
        'monthlyPayouts': value['monthlyPayouts'] == null ? undefined : ((value['monthlyPayouts'] as Array<any>).map(MonthPayoutToJSON)),
    };
}

