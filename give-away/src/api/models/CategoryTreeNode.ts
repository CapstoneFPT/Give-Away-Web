/* tslint:disable */
/* eslint-disable */
/**
 * Give Away API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CategoryTreeNode
 */
export interface CategoryTreeNode {
    /**
     * 
     * @type {string}
     * @memberof CategoryTreeNode
     */
    categoryId?: string;
    /**
     * 
     * @type {string}
     * @memberof CategoryTreeNode
     */
    parentId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CategoryTreeNode
     */
    level?: number;
    /**
     * 
     * @type {string}
     * @memberof CategoryTreeNode
     */
    name?: string | null;
    /**
     * 
     * @type {Array<CategoryTreeNode>}
     * @memberof CategoryTreeNode
     */
    children?: Array<CategoryTreeNode> | null;
}

/**
 * Check if a given object implements the CategoryTreeNode interface.
 */
export function instanceOfCategoryTreeNode(value: object): value is CategoryTreeNode {
    return true;
}

export function CategoryTreeNodeFromJSON(json: any): CategoryTreeNode {
    return CategoryTreeNodeFromJSONTyped(json, false);
}

export function CategoryTreeNodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryTreeNode {
    if (json == null) {
        return json;
    }
    return {
        
        'categoryId': json['categoryId'] == null ? undefined : json['categoryId'],
        'parentId': json['parentId'] == null ? undefined : json['parentId'],
        'level': json['level'] == null ? undefined : json['level'],
        'name': json['name'] == null ? undefined : json['name'],
        'children': json['children'] == null ? undefined : ((json['children'] as Array<any>).map(CategoryTreeNodeFromJSON)),
    };
}

export function CategoryTreeNodeToJSON(value?: CategoryTreeNode | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'categoryId': value['categoryId'],
        'parentId': value['parentId'],
        'level': value['level'],
        'name': value['name'],
        'children': value['children'] == null ? undefined : ((value['children'] as Array<any>).map(CategoryTreeNodeToJSON)),
    };
}

