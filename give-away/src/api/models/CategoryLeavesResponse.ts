/* tslint:disable */
/* eslint-disable */
/**
 * Give Away API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CategoryTreeNode } from './CategoryTreeNode';
import {
    CategoryTreeNodeFromJSON,
    CategoryTreeNodeFromJSONTyped,
    CategoryTreeNodeToJSON,
} from './CategoryTreeNode';

/**
 * 
 * @export
 * @interface CategoryLeavesResponse
 */
export interface CategoryLeavesResponse {
    /**
     * 
     * @type {string}
     * @memberof CategoryLeavesResponse
     */
    shopId?: string | null;
    /**
     * 
     * @type {Array<CategoryTreeNode>}
     * @memberof CategoryLeavesResponse
     */
    categoryLeaves?: Array<CategoryTreeNode> | null;
}

/**
 * Check if a given object implements the CategoryLeavesResponse interface.
 */
export function instanceOfCategoryLeavesResponse(value: object): value is CategoryLeavesResponse {
    return true;
}

export function CategoryLeavesResponseFromJSON(json: any): CategoryLeavesResponse {
    return CategoryLeavesResponseFromJSONTyped(json, false);
}

export function CategoryLeavesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryLeavesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'shopId': json['shopId'] == null ? undefined : json['shopId'],
        'categoryLeaves': json['categoryLeaves'] == null ? undefined : ((json['categoryLeaves'] as Array<any>).map(CategoryTreeNodeFromJSON)),
    };
}

export function CategoryLeavesResponseToJSON(value?: CategoryLeavesResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'shopId': value['shopId'],
        'categoryLeaves': value['categoryLeaves'] == null ? undefined : ((value['categoryLeaves'] as Array<any>).map(CategoryTreeNodeToJSON)),
    };
}

